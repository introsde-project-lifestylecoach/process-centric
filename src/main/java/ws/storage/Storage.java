
package ws.storage;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Storage", targetNamespace = "http://webservice.storage.lifecoach/")
@XmlSeeAlso({
        ObjectFactory.class
})
public interface Storage {


    /**
     * 
     * @param personId
     * @return
     *     returns ws.storage.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadPersonResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/readPersonRequest", output = "http://webservice.storage.lifecoach/Storage/readPersonResponse")
    Person readPerson(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId);

    /**
     * 
     * @param person
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "personId", targetNamespace = "")
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreatePersonResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/createPersonRequest", output = "http://webservice.storage.lifecoach/Storage/createPersonResponse")
    int createPerson(
            @WebParam(name = "person", targetNamespace = "http://webservice.storage.lifecoach/")
                    Person person);

    /**
     * 
     * @param person
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "personId", targetNamespace = "")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdatePersonResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/updatePersonRequest", output = "http://webservice.storage.lifecoach/Storage/updatePersonResponse")
    int updatePerson(
            @WebParam(name = "person", targetNamespace = "http://webservice.storage.lifecoach/")
                    Person person);

    /**
     * 
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeletePersonResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/deletePersonRequest", output = "http://webservice.storage.lifecoach/Storage/deletePersonResponse")
    int deletePerson(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId);

    /**
     * 
     * @param measureId
     * @param personId
     * @param measureTypeId
     * @return
     *     returns ws.storage.Measure
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadMeasure")
    @ResponseWrapper(localName = "readMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/readMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/readMeasureResponse")
    Measure readMeasure(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId,
            @WebParam(name = "measureId", targetNamespace = "")
                    int measureId);

    /**
     * 
     * @param personId
     * @param measureTypeId
     * @return
     *     returns java.util.List<ws.storage.Measure>
     */
    @WebMethod
    @WebResult(name = "measureList", targetNamespace = "")
    @RequestWrapper(localName = "getMeasureHistory", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetMeasureHistory")
    @ResponseWrapper(localName = "getMeasureHistoryResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetMeasureHistoryResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getMeasureHistoryRequest", output = "http://webservice.storage.lifecoach/Storage/getMeasureHistoryResponse")
    List<Measure> getMeasureHistory(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId);

    /**
     * 
     * @param nMeasure
     * @param personId
     * @param measureTypeId
     * @return
     *     returns java.util.List<ws.storage.Measure>
     */
    @WebMethod
    @WebResult(name = "measureList", targetNamespace = "")
    @RequestWrapper(localName = "getSomeMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetSomeMeasure")
    @ResponseWrapper(localName = "getSomeMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetSomeMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getSomeMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/getSomeMeasureResponse")
    List<Measure> getSomeMeasure(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId,
            @WebParam(name = "nMeasure", targetNamespace = "")
                    int nMeasure);

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<ws.storage.Measure>
     */
    @WebMethod
    @WebResult(name = "measureList", targetNamespace = "")
    @RequestWrapper(localName = "getLastMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetLastMeasure")
    @ResponseWrapper(localName = "getLastMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetLastMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getLastMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/getLastMeasureResponse")
    List<Measure> getLastMeasure(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId);

    /**
     * 
     * @param personId
     * @param measureTypeId
     * @return
     *     returns ws.storage.Measure
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "getLastMeasureByType", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetLastMeasureByType")
    @ResponseWrapper(localName = "getLastMeasureByTypeResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetLastMeasureByTypeResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getLastMeasureByTypeRequest", output = "http://webservice.storage.lifecoach/Storage/getLastMeasureByTypeResponse")
    Measure getLastMeasureByType(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId);

    /**
     * 
     * @param measure
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "measureId", targetNamespace = "")
    @RequestWrapper(localName = "createMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreateMeasure")
    @ResponseWrapper(localName = "createMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreateMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/createMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/createMeasureResponse")
    int createMeasure(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measure", targetNamespace = "http://webservice.localdb.lifecoach/")
                    Measure measure);

    /**
     * 
     * @param measure
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "measureId", targetNamespace = "")
    @RequestWrapper(localName = "updateMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdateMeasure")
    @ResponseWrapper(localName = "updateMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdateMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/updateMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/updateMeasureResponse")
    int updateMeasure(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measure", targetNamespace = "http://webservice.localdb.lifecoach/")
                    Measure measure);

    /**
     * 
     * @param measureId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "deleteMeasure", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeleteMeasure")
    @ResponseWrapper(localName = "deleteMeasureResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeleteMeasureResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/deleteMeasureRequest", output = "http://webservice.storage.lifecoach/Storage/deleteMeasureResponse")
    int deleteMeasure(
            @WebParam(name = "measureId", targetNamespace = "")
                    int measureId);

    /**
     * 
     * @param goalId
     * @return
     *     returns ws.storage.MeasureType
     */
    @WebMethod
    @WebResult(name = "measureType", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureType", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadMeasureType")
    @ResponseWrapper(localName = "readMeasureTypeResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadMeasureTypeResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/readMeasureTypeRequest", output = "http://webservice.storage.lifecoach/Storage/readMeasureTypeResponse")
    MeasureType readMeasureType(
            @WebParam(name = "goalId", targetNamespace = "")
                    int goalId);

    /**
     *
     * @return
     *     returns java.util.List<ws.storage.MeasureType>
     */
    @WebMethod
    @WebResult(name = "measureTypeList", targetNamespace = "")
    @RequestWrapper(localName = "getMeasureTypeList", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetMeasureTypeList")
    @ResponseWrapper(localName = "getMeasureTypeListResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetMeasureTypeListResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getMeasureTypeListRequest", output = "http://webservice.storage.lifecoach/Storage/getMeasureTypeListResponse")
    List<MeasureType> getMeasureTypeList();

    /**
     * 
     * @param type
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "idMeasureType", targetNamespace = "")
    @RequestWrapper(localName = "getIdMeasureTypeByType", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetIdMeasureTypeByType")
    @ResponseWrapper(localName = "getIdMeasureTypeByTypeResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetIdMeasureTypeByTypeResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getIdMeasureTypeByTypeRequest", output = "http://webservice.storage.lifecoach/Storage/getIdMeasureTypeByTypeResponse")
    int getIdMeasureTypeByType(
            @WebParam(name = "type", targetNamespace = "")
                    String type);

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<ws.storage.Goal>
     */
    @WebMethod
    @WebResult(name = "goalList", targetNamespace = "")
    @RequestWrapper(localName = "getGoals", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoals")
    @ResponseWrapper(localName = "getGoalsResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalsResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getGoalsRequest", output = "http://webservice.storage.lifecoach/Storage/getGoalsResponse")
    List<Goal> getGoals(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId);

    /**
     * 
     * @param goalId
     * @param personId
     * @param measureTypeId
     * @return
     *     returns ws.storage.Goal
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoal", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadGoal")
    @ResponseWrapper(localName = "readGoalResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadGoalResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/readGoalRequest", output = "http://webservice.storage.lifecoach/Storage/readGoalResponse")
    Goal readGoal(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId,
            @WebParam(name = "goalId", targetNamespace = "")
                    int goalId);

    /**
     * 
     * @param personId
     * @param measureTypeId
     * @return
     *     returns java.util.List<ws.storage.Goal>
     */
    @WebMethod
    @WebResult(name = "goalList", targetNamespace = "")
    @RequestWrapper(localName = "getGoalHistory", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalHistory")
    @ResponseWrapper(localName = "getGoalHistoryResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalHistoryResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getGoalHistoryRequest", output = "http://webservice.storage.lifecoach/Storage/getGoalHistoryResponse")
    List<Goal> getGoalHistory(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "measureTypeId", targetNamespace = "")
                    String measureTypeId);

    /**
     * 
     * @param goal
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "goalId", targetNamespace = "")
    @RequestWrapper(localName = "createGoal", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreateGoal")
    @ResponseWrapper(localName = "createGoalResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.CreateGoalResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/createGoalRequest", output = "http://webservice.storage.lifecoach/Storage/createGoalResponse")
    int createGoal(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "goal", targetNamespace = "http://webservice.localdb.lifecoach/")
                    Goal goal);

    /**
     * 
     * @param goal
     * @param personId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "goalId", targetNamespace = "")
    @RequestWrapper(localName = "updateGoal", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdateGoal")
    @ResponseWrapper(localName = "updateGoalResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.UpdateGoalResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/updateGoalRequest", output = "http://webservice.storage.lifecoach/Storage/updateGoalResponse")
    int updateGoal(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "goal", targetNamespace = "http://webservice.localdb.lifecoach/")
                    Goal goal);

    /**
     * 
     * @param goalId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "deleteGoal", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeleteGoal")
    @ResponseWrapper(localName = "deleteGoalResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.DeleteGoalResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/deleteGoalRequest", output = "http://webservice.storage.lifecoach/Storage/deleteGoalResponse")
    int deleteGoal(
            @WebParam(name = "goalId", targetNamespace = "")
                    int goalId);

    /**
     * 
     * @param personId
     * @param title
     * @return
     *     returns ws.storage.Goal
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "getGoalByTitle", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalByTitle")
    @ResponseWrapper(localName = "getGoalByTitleResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalByTitleResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getGoalByTitleRequest", output = "http://webservice.storage.lifecoach/Storage/getGoalByTitleResponse")
    Goal getGoalByTitle(
            @WebParam(name = "personId", targetNamespace = "")
                    int personId,
            @WebParam(name = "title", targetNamespace = "")
                    String title);

    /**
     * 
     * @param goalId
     * @return
     *     returns ws.storage.GoalType
     */
    @WebMethod
    @WebResult(name = "goalType", targetNamespace = "")
    @RequestWrapper(localName = "readGoalType", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadGoalType")
    @ResponseWrapper(localName = "readGoalTypeResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.ReadGoalTypeResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/readGoalTypeRequest", output = "http://webservice.storage.lifecoach/Storage/readGoalTypeResponse")
    GoalType readGoalType(
            @WebParam(name = "goalId", targetNamespace = "")
                    int goalId);

    /**
     *
     * @return
     *     returns java.util.List<ws.storage.GoalType>
     */
    @WebMethod
    @WebResult(name = "goalTypeList", targetNamespace = "")
    @RequestWrapper(localName = "getGoalTypeList", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalTypeList")
    @ResponseWrapper(localName = "getGoalTypeListResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetGoalTypeListResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getGoalTypeListRequest", output = "http://webservice.storage.lifecoach/Storage/getGoalTypeListResponse")
    List<GoalType> getGoalTypeList();

    /**
     * 
     * @param sex
     * @param weight
     * @param waist
     * @param age
     * @param hip
     * @param height
     * @return
     *     returns ws.storage.Bmi
     */
    @WebMethod
    @WebResult(name = "bmi", targetNamespace = "")
    @RequestWrapper(localName = "getBmi", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetBmi")
    @ResponseWrapper(localName = "getBmiResponse", targetNamespace = "http://webservice.storage.lifecoach/", className = "ws.storage.GetBmiResponse")
    @Action(input = "http://webservice.storage.lifecoach/Storage/getBmiRequest", output = "http://webservice.storage.lifecoach/Storage/getBmiResponse")
    Bmi getBmi(
            @WebParam(name = "weight", targetNamespace = "")
                    float weight,
            @WebParam(name = "height", targetNamespace = "")
                    float height,
            @WebParam(name = "sex", targetNamespace = "")
                    int sex,
            @WebParam(name = "age", targetNamespace = "")
                    int age,
            @WebParam(name = "waist", targetNamespace = "")
                    float waist,
            @WebParam(name = "hip", targetNamespace = "")
                    float hip);

}
